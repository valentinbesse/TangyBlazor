@if (Prod is not null)
{
    <div class="bg-light border m-1 col-5" @onclick="(args)=>LastSelectedProduct(args,Prod.Name)">
        <h4 class="text-secondary">Product - @Prod.Id</h4>
        <input type="checkbox" @onchange="FavoriteUpdated"/> Add to Favorite <br />
        Name - @Prod.Name<br />
        <p>RF from Parent - @FirstFragment @SecondFragment</p><br />
        Show Properties:
        <input type="checkbox" @bind-value="Prod.IsActive" checked="@(Prod.IsActive?"checked":null)" />

        @if (Prod.IsActive)
        {
            @foreach (var prodProp in Prod.ProductProperties)
            {
                <p>@prodProp.Key - @prodProp.Value</p>
            }
        }

        <br />
        <_EditDeleteButton IsActive="Prod.IsActive">

        </_EditDeleteButton>
    </div>
}

@code {

    [Parameter]
    public Demo_Product? Prod { get; set; }

    [Parameter]
    public EventCallback<bool> OnFavoriteUpdated { get; set; }

    [Parameter]
    public EventCallback<string> OnLastSelectedProductChanged { get; set; }

    [Parameter]
    public RenderFragment FirstFragment { get; set; }

    [Parameter]
    public RenderFragment SecondFragment { get; set; }

    private async Task FavoriteUpdated(ChangeEventArgs e)
    {
        await OnFavoriteUpdated.InvokeAsync((bool)e.Value);
    }

    private async Task LastSelectedProduct(MouseEventArgs e, string name)
    {
        await OnLastSelectedProductChanged.InvokeAsync(name);
    }
}
